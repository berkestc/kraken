// Mocks generated by Mockito 5.4.0 from annotations
// in kraken/test/features/anime/data/repositories/anime_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i8;
import 'package:flutter/services.dart' as _i4;
import 'package:fpdart/fpdart.dart' as _i2;
import 'package:kraken/core/models/failure/failure.dart' as _i7;
import 'package:kraken/services/network/network_service.dart' as _i6;
import 'package:kraken/services/platform/platform_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PlatformService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlatformService extends _i1.Mock implements _i3.PlatformService {
  MockPlatformService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void initialize(_i4.ValueChanged<int>? onTriggerFetchAnimeList) =>
      super.noSuchMethod(
        Invocation.method(
          #initialize,
          [onTriggerFetchAnimeList],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> sendFetchAnimeListRequest({int? page = 1}) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendFetchAnimeListRequest,
          [],
          {#page: page},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [NetworkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkService extends _i1.Mock implements _i6.NetworkService {
  MockNetworkService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i7.Failure, _i8.Response<Map<String, dynamic>>>> get(
    String? url, {
    Map<String, dynamic>? queryParameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#queryParameters: queryParameters},
        ),
        returnValue: _i5.Future<
                _i2
                .Either<_i7.Failure, _i8.Response<Map<String, dynamic>>>>.value(
            _FakeEither_0<_i7.Failure, _i8.Response<Map<String, dynamic>>>(
          this,
          Invocation.method(
            #get,
            [url],
            {#queryParameters: queryParameters},
          ),
        )),
      ) as _i5
          .Future<_i2.Either<_i7.Failure, _i8.Response<Map<String, dynamic>>>>);

  @override
  _i5.Future<_i2.Either<_i7.Failure, _i8.Response<Map<String, dynamic>>>> post(
    String? url, {
    Map<String, dynamic>? optionalHeaders,
    Map<String, dynamic>? queryParameters,
    dynamic data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #optionalHeaders: optionalHeaders,
            #queryParameters: queryParameters,
            #data: data,
          },
        ),
        returnValue: _i5.Future<
                _i2
                .Either<_i7.Failure, _i8.Response<Map<String, dynamic>>>>.value(
            _FakeEither_0<_i7.Failure, _i8.Response<Map<String, dynamic>>>(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #optionalHeaders: optionalHeaders,
              #queryParameters: queryParameters,
              #data: data,
            },
          ),
        )),
      ) as _i5
          .Future<_i2.Either<_i7.Failure, _i8.Response<Map<String, dynamic>>>>);

  @override
  _i5.Future<_i2.Either<_i7.Failure, _i8.Response<Map<String, dynamic>>>> put(
    String? url, {
    dynamic data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {#data: data},
        ),
        returnValue: _i5.Future<
                _i2
                .Either<_i7.Failure, _i8.Response<Map<String, dynamic>>>>.value(
            _FakeEither_0<_i7.Failure, _i8.Response<Map<String, dynamic>>>(
          this,
          Invocation.method(
            #put,
            [url],
            {#data: data},
          ),
        )),
      ) as _i5
          .Future<_i2.Either<_i7.Failure, _i8.Response<Map<String, dynamic>>>>);

  @override
  _i5.Future<
      _i2.Either<_i7.Failure, _i8.Response<Map<String, dynamic>>>> delete(
    String? url, {
    dynamic data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {#data: data},
        ),
        returnValue: _i5.Future<
                _i2
                .Either<_i7.Failure, _i8.Response<Map<String, dynamic>>>>.value(
            _FakeEither_0<_i7.Failure, _i8.Response<Map<String, dynamic>>>(
          this,
          Invocation.method(
            #delete,
            [url],
            {#data: data},
          ),
        )),
      ) as _i5
          .Future<_i2.Either<_i7.Failure, _i8.Response<Map<String, dynamic>>>>);
}
